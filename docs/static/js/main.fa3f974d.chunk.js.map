{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAkBhD,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAQd,4BAAMD,GACN,2BACIQ,KAAM,OACNC,MAAUT,EACVU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KAGDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAkBZM,GAlBY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCJHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EAEXd,mBAAS,CAAEqB,KAAM,GAAIa,SAAS,IAFnB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAcrC,OAVAC,qBAAU,WAEFxB,EAAQC,GACHwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACnBf,KAAMkB,EACNL,SAAS,SAGtB,CAAEpB,IAEEqB,EDVyBK,CAAY1B,GAA/Ba,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAErB,OAEI,oCAEI,wBAAIJ,UAAW,qCAAsChB,GAErD,2BAAKoB,GAAW,cAChB,yBAAKJ,UAAU,aAIHH,EAAOJ,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eAAaiB,IAAQjB,EAAIC,IAAQD,UEgB1CkB,EAjCM,WAAM,MAGa1C,mBAAS,CAAC,cAHvB,mBAGhB2C,EAHgB,KAGJ5C,EAHI,KAWvB,OACI,oCACI,+CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAE/B,6BAGA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACvB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAYA,U,MCrBpC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.fa3f974d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n\r\n        //console.log('submit hecho');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{ inputValue }</h1>\r\n            <input \r\n                type =\"text\"\r\n                value = { inputValue }\r\n                onChange = {handleInputChange}\r\n                />\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ZuLkcsf7uuiYwv2E2QHBmyoSVaEhbAxI`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data}  = await resp.json();\r\n\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n            \r\n    })\r\n\r\n    \r\n    return gifs;\r\n}","\r\nimport React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGif } from '../hooks/useFetchGif'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading} = useFetchGif(category);\r\n\r\n    return (\r\n\r\n        <>\r\n        \r\n            <h3 className= \"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            <p>{ loading && 'Cargando..' }</p>\r\n            <div className=\"card-grid\">\r\n                \r\n                    \r\n                    {\r\n                        images.map(img => \r\n                        <GifGridItem key = { img.id} {...img}/>\r\n                        )\r\n                    }\r\n\r\n                    \r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGif = (category) => {\r\n\r\n    const [state, setState] = useState({ data: [], loading: true })\r\n\r\n    useEffect(() => {\r\n        \r\n            getGifs(category)\r\n                .then(imgs => setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                }))\r\n            \r\n    }, [ category ])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['goku', 'naruto', 'saint seia'];\r\n    const [categories, setCategories] = useState(['one punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories([...categories, 'HunterX']);\r\n    //     setCategories( cats => [...cats, 'HunderXHunter']);\r\n    // }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h2>Giff Expert App</h2>\r\n            <AddCategory setCategories = { setCategories}/>\r\n\r\n            <hr />\r\n\r\n            {/* <button onClick = {handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                    <GifGrid \r\n                        key ={category}\r\n                        category = {category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}